--- 
AWSTemplateFormatVersion: 2010-09-09
Description: |
  Customer360 Network deployment CloudFormation template.
  It deploys:
    - VPC in given CIDR or default 10.14.16.0/20
    - 3 Public Subnets in given CIDR or default 
    - Internet Gateway
    - One Route Table with Subnet associations to VPC and Internet Gateway Attched to VPC
    - No Ingress Security group

# Network Metadata declaration block
Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label: 
        default: Environment - General Environment Parameters
      Parameters:
      - EnvironmentName
    - Label:
        default: VPC & Subnets CIDRs
      Parameters:
      - VpcCIDR
      - PublicSubnet1Cidr
      - PublicSubnet2Cidr
      - PublicSubnet2Cidr
    - Label:
        default: Tags
      Parameters:
      - IsWork
      - WorkType
    ParameterLabels:
      EnvironmentName: 
        default: Environment Name
      VpcCIDR:
        default: VPC CIDR
      PublicSubnet1Cidr:
        default: Public Subnet 1 CIDR
      PublicSubnet2Cidr:
        default: Public Subnet 2 CIDR
      PublicSubnet3Cidr:
        default: Public Subnet 3 CIDR
      IsWork:
        default: Work Related
      WorkType:
        default: Work Type

# Network Parameter declaration block
Parameters: 
  EnvironmentName:
    Description: A name for the environment that will be prefixed to resource names
    Type: String
    Default: customer360
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.14.16.0/20
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24
  PublicSubnet1Cidr:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.14.16.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24 
  PublicSubnet2Cidr:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.14.17.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24 
  PublicSubnet3Cidr:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the third Availability Zone
    Type: String
    Default: 10.14.18.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24 
  IsWork:
    Type: String  
    Description: Defines if it is work related activity
    AllowedValues: [true, false]
    Default: true
  WorkType:
    Type: String  
    Description: Defines the type of work being done
    Default: customer360

# Network Resources declaration block
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-vpc
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-ig
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-public-az1
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-public-az2
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet3Cidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-public-az3
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-rt-table
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3
  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-no-ingress-sg
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

# Network Outputs declaration block
Outputs:

  StackName:
    Value:
      Ref: AWS::StackName
  RegionName:
    Value:
      Ref: AWS::Region
  VpcId:
    Description: A reference to the created VPC ID
    Value: !Ref VPC
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', VpcId ] ]
  VpcCidr:
    Description: A reference to the created VPC CIDR
    Value: !Ref VpcCIDR
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', VpcCidr ] ]
  PublicSubnet1:
    Description: A reference to the public subnet 
    Value: !Ref PublicSubnet1
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', PublicSubnet1 ] ]
  PublicSubnet2:
    Description: A reference to the public subnet 
    Value: !Ref PublicSubnet2
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', PublicSubnet2 ] ]
  PublicSubnet3:
    Description: A reference to the public subnet 
    Value: !Ref PublicSubnet3
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', PublicSubnet3 ] ]