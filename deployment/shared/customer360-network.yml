--- 
AWSTemplateFormatVersion: 2010-09-09
Description:
  This template deploys a VPC in the eu-west-1 (Ireland) Region, with one private
  subnet and one public subnet. It deploys an Internet Gateway, with a default route
  on the public subnet. It deploys one NAT Gateways and default routes for the private subnet.

# RDS Metadata declaration block
Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:

    - Label:
        default: VPC - Resources
      Parameters:
      - BaseVpcStackName
      - VpcCIDR

    - Label:
        default: VPC - Subnets resources
      Parameters:
      - PublicSubnet1CIDR
      - PrivateSubnet1CIDR

    - Label:
        default: Tags
      Parameters:
      - IsWork
      - WorkType
    
    ParameterLabels:
      BaseVpcStackName:
        default: VPC Name
      VpcCIDR:
        default: VPC CIDR
      PublicSubnet1CIDR:
        default: public-1a
      PrivateSubnet1CIDR:
        default: private-1a
      IsWork:
        default: Work Related Stack?
      WorkType:
        default: If Work Related, What Project/Training/Type

# VPC Parameter declaration block
Parameters: 
  # VPC Main Resources Parameters
  BaseVpcStackName:
    Description: A name for vpc that will be prefixed to resource names
    Type: String
    Default: vpc-customer360
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.14.16.0/20
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24

  # VPC Subnet Resources Parameters
  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.14.16.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24 
  
  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.14.19.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/8-24
  
  # Tags Parameters
  IsWork:
    Type: String  
    Description: Defines if it is work related activity
    AllowedValues: [true, false]
    Default: true

  WorkType:
    Type: String  
    Description: Defines the type of work being done
    Default: customer360

# VPC Resources declaration block
Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Ref BaseVpcStackName
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${BaseVpcStackName} - default internet gateway
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${BaseVpcStackName} - public subnet (az3)
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${BaseVpcStackName} - private subnet
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${BaseVpcStackName} - private subnet (az1)
        - Key: IsWorkNat
          Value: !Ref IsWork
        - Key: WorkType
          Value: !Ref WorkType
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${BaseVpcStackName} - public routes
      - Key: IsWork
        Value: !Ref IsWork
      - Key: WorkType
        Value: !Ref WorkType
  
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${BaseVpcStackName} - private routes (az1)
        - Key: IsWork
          Value: !Ref IsWork
        - Key: WorkType
          Value: !Ref WorkType
  
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
    
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  
  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

# VPC Outputs declaration block
Outputs:

  StackName:
    Value:
      Ref: AWS::StackName
  RegionName:
    Value:
      Ref: AWS::Region

  VpcId:
    Description: A reference to the created VPC ID
    Value: !Ref VPC
    Export:
      Name: !Join [ ":", [ !Ref 'BaseVpcStackName', VpcId ] ]
  
  VpcCidr:
    Description: A reference to the created VPC CIDR
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Join [ ":", [ !Ref 'BaseVpcStackName', VpcCidr ] ]
  
  PublicSubnet1:
    Description: A reference to the public subnet 
    Value: !Ref PublicSubnet1
    Export:
      Name: !Join [ ":", [ !Ref 'BaseVpcStackName', PublicSubnet ] ]

  PublicSubnet1Cidr:
    Description: A reference to the created VPC ID
    Value: !GetAtt PublicSubnet1.CidrBlock
    Export:
      Name: !Join [ ":", [ !Ref 'BaseVpcStackName', PublicSubnetCidr ] ]
  
  Private1Subnet:
    Description: A reference to the public Subnet CIDR 
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Join [ ":", [ !Ref 'BaseVpcStackName', PrivateSubnet ] ]

  Private1SubnetCidr:
    Description: A reference to the private Subnet CIDR
    Value: !GetAtt PrivateSubnet1.CidrBlock
    Export:
      Name: !Join [ ":", [ !Ref 'BaseVpcStackName', PrivateSubnet ] ]