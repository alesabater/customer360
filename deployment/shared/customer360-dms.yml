AWSTemplateFormatVersion: 2010-09-09
Description: |
  Customer360 CDC deployment CloudFormation template.
  It deploys:
    - DMS Security Group
    - DMS Subnet Group
    - DMS Replication Instance
    - DMS MySQL Endpoint

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
    - Label: 
        default: Environment - General Environment Parameters
      Parameters:
      - EnvironmentName
      - EnvironmentSize
    - Label:
        default: Tags
      Parameters:
      - IsWork
      - WorkType
    ParameterLabels:
      EnvironmentName: 
        default: Environment Name
      EnvironmentSize:
        default: Environment Size
      IsWork:
        default: Work Related Stack?
      WorkType:
        default: If Work Related, What Project/Training/Type
      

Parameters: 
  EnvironmentName:
    Description: A name for the environment that will be prefixed to resource names
    Type: String
    Default: customer360
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - MICRO
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (XS,S,M,L)
  IsWork:
    Type: String  
    Description: Defines if it is work related activity
  WorkType:
    Type: String  
    Description: Defines the type of work being done
    Default: customer360

Mappings:  
  InstanceSize:
    MICRO: 
      "DMS" : "dms.t2.micro"
    SMALL:
      "DMS" : "dms.t2.small"
    MEDIUM:
      "DMS" : "dms.t2.medium"
    LARGE:
      "DMS" : "dms.t2.large"

Resources: 
  DMSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${EnvironmentName}-dms-sg'
      GroupDescription: 'DMS Security Group'
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-dms-sg'
        - Key: IsWork
          Value: !Ref IsWork
        - Key: WorkType
          Value: !Ref WorkType
      VpcId: 
        Fn::ImportValue: !Sub '${EnvironmentName}:VpcId'
  DMSReplicationSubnetGroup:
    Type: AWS::DMS::ReplicationSubnetGroup
    Properties:
      ReplicationSubnetGroupDescription: Subnets available for DMS
      SubnetIds:
        - Fn::ImportValue: !Sub '${EnvironmentName}:PublicSubnet1'
        - Fn::ImportValue: !Sub '${EnvironmentName}:PublicSubnet2'
        - Fn::ImportValue: !Sub '${EnvironmentName}:PublicSubnet3'
  DMSReplicationInstance:
    Type: AWS::DMS::ReplicationInstance
    Properties:
      PubliclyAccessible: false
      ReplicationInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB]
      ReplicationInstanceIdentifier: !Sub ${EnvironmentName}-dms-instance
      ReplicationSubnetGroupIdentifier:
        Ref: DMSReplicationSubnetGroup
      VpcSecurityGroupIds:
      - Ref: DMSSecurityGroup
    DependsOn:
    - DMSReplicationSubnetGroup
    - DMSSecurityGroup
  MySQLSourceEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointType: source
      EngineName: mysql
      Password: 
        Fn::Join: 
          - ':' 
          - - '{{resolve:secretsmanager'
            - Fn::ImportValue: !Sub '${EnvironmentName}:MySQLSecret'
            - 'SecretString:password}}'
      #Password: password
      Port: 3306
      ServerName: 
        Fn::ImportValue: !Sub '${EnvironmentName}:DBId'
      Username: 
        Fn::Join: 
          - ':' 
          - - '{{resolve:secretsmanager'
            - Fn::ImportValue: !Sub '${EnvironmentName}:MySQLSecret'
            - 'SecretString:username}}'
      #Username: username
    DependsOn:
    - DMSReplicationInstance

Outputs:
  DMSReplicationInstance:
    Description: A reference to the DMS Replication Instance
    Value: !Ref DMSReplicationInstance
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', DMSReplicationInstance ] ]
  MySQLSourceEndpoint:
    Description: A reference to DMS SQL Endpoint
    Value: !Ref MySQLSourceEndpoint
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', MySQLSourceEndpoint ] ]
