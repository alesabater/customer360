---
AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Customer360 MySQL RDS deployment CloudFormation template.
  It deploys:
    - MySQL 5.6 RDS database using provided snapshot
    - RDS Subnet Group 
    - RDS Parameters Group for DMS compatibility
    - Security group with port 3360 publicly accessible

# RDS Metadata declaration block
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:  
    - Label: 
        default: Environment - General Environment Parameters
      Parameters:
      - EnvironmentName
      - EnvironmentSize  
    - Label:
        default: Secret Manager - Resources Values
      Parameters:
      - DBMasterUser
    - Label:
        default: Storage - MySQL Resource Parameters
      Parameters:
      - DBMasterUser
      - DBSnapshotId
      - DBMultiAZ
      - DBAllocatedStorage
    - Label:
        default: Tags
      Parameters:
      - IsWork
      - WorkType

    ParameterLabels:
      EnvironmentName: 
        default: Environment Name
      EnvironmentSize:
        default: Environment Size
      DBMasterUser:
        default: Admin Username
      DBInstanceClass:
        default: DB Instance
      DBSnapshotId:
        default: Snapshot Identifier to start Database
      DBMultiAZ:
        default: Multi-AZ
      DBAllocatedStorage:
        default: Allocated Storage
      IsWork:
        default: Work Related Stack?
      WorkType:
        default: If Work Related, What Project/Training/Type

# RDS Parameter declaration block
Parameters:
  EnvironmentName:
    Description: A name for the environment that will be prefixed to resource names
    Type: String
    Default: customer360 
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - MICRO
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (XS,S,M,L)
  DBMasterUser:
    Type: String
    Description : The database admin account username
    MinLength: 1
    MaxLength: 16
    Default: admin
    AllowedPattern: '([a-zA-Z0-9\-]){1,16}'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBSnapshotId:
    Type: String
    Description: Snapshot ARN to use for MySQL database
    Default: 'arn:aws:rds:eu-west-1:271342081496:snapshot:clouderaprep-final-snapshot'
    AllowedPattern: 'arn:aws:rds:.*'
    ConstraintDescription: Must be a valid ARN string.
  DBMultiAZ:
    Type: String
    Description: Multiple Availability Zone deployment.
    Default: false
    AllowedValues: 
    - true
    - false
  DBAllocatedStorage:
    Type: String
    Description: Allocated storage for MySQL Database
    Default: 20
    AllowedPattern: '([0-9]){2,4}'
    ConstraintDescription: must be an integer (20GB-16TB).
  IsWork:
    Type: String  
    Description: Defines if it is work related activity
    AllowedValues: [true, false]
    Default: true
  WorkType:
    Type: String  
    Description: Defines the type of work being done
    Default: customer360

Mappings:  
  InstanceSize:
    MICRO: 
      "DB" : "db.t2.micro"
    SMALL:
      "DB" : "db.t2.small"
    MEDIUM:
      "DB" : "db.t2.medium"
    LARGE:
      "DB" : "db.t2.large"

# RDS Resources declaration block
Resources:
  MySecretDB:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '${EnvironmentName}-mysql-secret'
      Description: RDS Admin user Mysql
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBMasterUser}"}'
        GenerateStringKey: "password"
        ExcludePunctuation: true
        ExcludeUppercase: true
        IncludeSpace: false
        RequireEachIncludedType: true
        PasswordLength: 8
  RdsSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup 
    Properties: 
      DBSubnetGroupName: !Sub '${EnvironmentName}-mysql-subnet-grp'
      DBSubnetGroupDescription: 'Subnets group RDS'
      SubnetIds: 
        - Fn::ImportValue: !Sub '${EnvironmentName}:PublicSubnet1'
        - Fn::ImportValue: !Sub '${EnvironmentName}:PublicSubnet2'
        - Fn::ImportValue: !Sub '${EnvironmentName}:PublicSubnet3'
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-mysql-subnet-grp'
        - Key: IsWork
          Value: !Ref IsWork
        - Key: WorkType
          Value: !Ref WorkType
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${EnvironmentName}-mysql-sg'
      GroupDescription: 'Enable RDS MySQL access via port 3306'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306 
          ToPort: 3306 
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 
            Fn::ImportValue: !Sub '${EnvironmentName}:VpcCidr'
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-mysql-sg'
        - Key: IsWork
          Value: !Ref IsWork
        - Key: WorkType
          Value: !Ref WorkType
      VpcId: 
        Fn::ImportValue: !Sub '${EnvironmentName}:VpcId'
  MySQLDBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: 'Enables bin_log prerequisites'
      Family: mysql5.6
      Parameters:
        binlog_format: ROW
        binlog_checksum: NONE 
  RDSMySql: 
    Type: AWS::RDS::DBInstance
    DependsOn: 
      - RdsSubnetGroup
      - RdsSecurityGroup
      - MySecretDB
    Properties: 
      DBParameterGroupName: !Ref MySQLDBParameterGroup
      PubliclyAccessible: true
      AllocatedStorage: !Ref 'DBAllocatedStorage'
      DBInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB]
      Engine: 'MySQL'
      #DBSnapshotIdentifier: !Ref DBSnapshotId
      EngineVersion: '5.6.37'
      MultiAZ: !Ref DBMultiAZ
      DBSubnetGroupName: !Ref 'RdsSubnetGroup'
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretDB, ':SecretString:username}}' ]]
      #MasterUsername: username
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretDB, ':SecretString:password}}' ]]
      #MasterUserPassword: password
      BackupRetentionPeriod: 2
      DBInstanceIdentifier: !Sub '${EnvironmentName}-mysql'
      VPCSecurityGroups: 
        - !Ref 'RdsSecurityGroup'
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-mysql'
        - Key: IsWork
          Value: !Ref IsWork
        - Key: WorkType
          Value: !Ref WorkType

# RDS Outputs declaration block
Outputs:
  StackName:
    Value:
      Ref: AWS::StackName
  RegionName:
    Value:
      Ref: AWS::Region
  RDSAddress:
      Description : Database Identifier
      Value : !Sub '${RDSMySql.Endpoint.Address}'
      Export:
        Name: !Join [ ":", [ !Ref 'EnvironmentName', DBId ] ]  
  MySecretDB:
    Description: A reference to the RDS MySQL Database Secret
    Value: !Ref MySecretDB
    Export:
      Name: !Join [ ":", [ !Ref 'EnvironmentName', MySQLSecret ] ]
  