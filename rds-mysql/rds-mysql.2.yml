---
AWSTemplateFormatVersion: '2010-09-09'

Description: > 
  Default Cloudformation template for create MySql RDS

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tags - Resources Values
        Parameters:
          - Company
          - Environment
          - Project
          - Owner
      - Label:
          default: Application - Resources Values
        Parameters:
          - Scope
      - Label:
          default: Network - Resources Values
        Parameters:
          - BaseVpcStackName
      - Label:
           default: DNS - Resources Values
        Parameters:
          - BaseDomainNameStackName
      - Label:
          default: Secret Manager - Resources Values
        Parameters:
          - SecretName
          - DBMasterUser
      - Label:
          default: Set MySql - Resources Values 
        Parameters:
          - DBInstanceClass
          - DBBackupRetentionPeriod
          - DBName
          - DBAllocatedStorage
          - DBEngineVersion
          - MultiAZ

    ParameterLabels:
      Company:
        default: Company name
      Project:
        default: Project name, could be sandbox, level, ams, customer, etc
      Owner:
        default: Owner name, who is the owner of this project, could be the Product Owner name
      Environment:
        default: Environment name
      Scope:
        default: Scope, determine if the application balancer is created on public or privated subnets
      SecretName:
        default: SecreName, name that describe user root in the secret manager
      DBMasterUser:
        default: root user to access mysql
      DBInstanceClass:
        default: Type instance node
      DBName:
        default: MySql RDS Name 
      BaseVpcStackName:
        default: Base VPC stack name, which cloudformation stack provides VPC exports values to this stack
      BaseDomainNameStackName:
        default: Base VPC stack name, which cloudformation stack provides hosted zones and ACM exports values to this stack

Parameters:
  Company:
    Type: String
    Description: Company name
    Default: Vueling
    AllowedValues:
      - Vueling
      - Level
      - Anisec

  Project:
    Type: String
    Description: Project name, ex. level, ams, crew, cms, etc.
    MinLength: 2
    MaxLength: 15
    AllowedPattern: '([a-z0-9\-]){2,28}'
    ConstraintDescription: Must be in lower case, alphanumeric and between 2 and 28 characters.

  Owner:
    Description: Owner name of this element.
    Type: String
    Default: itcloud

  Environment:
    Type: String
    Description: Environment name.
    Default: production
    AllowedValues:
      - production
      - preproduction
      - development
      - qa

  Scope:
    Type: String
    Description: Visibility Scope, this define if your application group is public/private access
    Default: private
    AllowedValues:
      - private
      # - public

  BaseVpcStackName:
    Type: String
    Description: The base stack that contains the VPC, subnets, etc.
    Default: vpc-main

  BaseDomainNameStackName:
    Type: String
    Description: The base stack that contains
    Default: domain-name-main

  DBName: 
    Type: String
    Description: The database name
    MinLength: 1
    MaxLength: 64
    Default: db-01
    AllowedPattern: '([a-z0-9\-]){1,64}'
    ConstraintDescription: Must be in lower case, alphanumeric (including hyphen) and between 1 and 64 characters

  SecretName:
    Type: String
    Description: Name of the Secret Manager.
    MinLength: 8
    MaxLength: 100 
    default: developer/rds/mysql/user
    AllowedPattern: '([a-z0-9/-]){3,100}'
    ConstraintDescription: Must be in lower case, alphanumeric (including bar) and between 3 and 100 characters

  DBMasterUser:
    Type: String
    Description: The root user for MySql
    MinLength: 1
    MaxLength: 16
    Default: admin
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  DBAllocatedStorage:
    Type: Number 
    Description: The size of the database (Gb)
    MinValue: 5
    MaxValue: 1024
    Default: 5
    ConstraintDescription: must be between 5 and 1024Gb.

  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.
  
  DBEngineVersion:
    Type: String
    Description: Select version Mysql.
    Default: '5.6.40'
    AllowedValues:
      - '5.7.22'
      - '5.7.21'
      - '5.7.19'
      - '5.7.17'
      - '5.7.16'
      - '5.6.40'
      - '5.6.39'
      - '5.6.37'
      - '5.6.35'
      - '5.6.34'
      - '5.6.29'
      - '5.6.27'
      - '5.5.59'
      - '5.5.57'
      - '5.5.54'
      - '5.5.53'
      - '5.5.46'
  
  DBInstanceClass:
    Type: String
    Description: The name of the compute and memory capacity classes of the DB instance.
    Default: db.t2.small
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.micro 	
      - db.t2.small 	
      - db.t2.medium 	
      - db.t2.large 	
      - db.t2.xlarge 	
      - db.t2.2xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge 
      - db.r3.8xlarge 	
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.x1e.xlarge
      - db.x1e.2xlarge
      - db.x1e.4xlarge
      - db.x1e.8xlarge
      - db.x1e.16xlarge
      - db.x1e.32xlarge
      - db.x1.16xlarge
      - db.x1.32xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge

Mappings:
  Names:
    production:
      short: prod
      cap: Production
    preproduction:
      short: pre
      cap: Preproduction
    development:
      short: dev
      cap: Development

Resources:
  MySecretDB:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Ref SecretName
      Description: RDS Admin user Mysql
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBMasterUser}"}'
        GenerateStringKey: "password"
        PasswordLength: 20
        ExcludeCharacters: '"@/\'

  RdsSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup 
    Properties: 
      DBSubnetGroupName: 
        !Sub 
          - 'grp-rds-mysql-${Project}-${EnvironmentName}-${DBName}'
          - { EnvironmentName: !FindInMap [ Names, !Ref Environment, short ] }
      DBSubnetGroupDescription: 'Subnets group RDS'
      SubnetIds: 
        - Fn::ImportValue: 
            !Sub '${BaseVpcStackName}:PrivateSubnet1'
        - Fn::ImportValue: 
            !Sub '${BaseVpcStackName}:PrivateSubnet2'
        - Fn::ImportValue: 
            !Sub '${BaseVpcStackName}:PrivateSubnet3'
      Tags:
        - Key: Name
          Value: 
            !Sub 
              - 'grp-rds-mysql-${Project}-${EnvironmentName}-${DBName}'
              - { EnvironmentName: !FindInMap [ Names, !Ref Environment, short ] }
        - Key: vy:Environment
          Value: !Ref Environment
        - Key: vy:Owner
          Value: !Ref Owner
        - Key: vy:Project
          Value: !Ref Project
        - Key: vy:Company
          Value: !Ref Company
        - Key: Service
          Value: 'MySQL' 

  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 
        !Sub 
          - 'sgn-rds-mysql-${Project}-${EnvironmentName}-${DBName}'
          - { EnvironmentName: !FindInMap [ Names, !Ref Environment, short ] }
      GroupDescription: 'Enable RDS MySQL access via port 3306'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306 
          ToPort: 3306 
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value:
            !Sub 
              - 'sgn-rds-mysql-${Project}-${EnvironmentName}-${DBName}'
              - { EnvironmentName: !FindInMap [ Names, !Ref Environment, short ] }
        - Key: Service
          Value: 'MySQL'
        - Key: vy:Environment
          Value: !Ref Environment
        - Key: vy:Owner
          Value: !Ref Owner
        - Key: vy:Project
          Value: !Ref Project
        - Key: vy:Company
          Value: !Ref Company
      VpcId:
        Fn::ImportValue: !Sub '${BaseVpcStackName}:VpcId'

  RDSMySql: 
    Type: AWS::RDS::DBInstance
    DependsOn: 
      - RdsSubnetGroup
      - RdsSecurityGroup
      - MySecretDB
    Properties: 
      AllocatedStorage: !Ref 'DBAllocatedStorage'
      DBInstanceClass: !Ref 'DBInstanceClass'
      Engine: 'MySQL'
      EngineVersion: !Ref 'DBEngineVersion'
      MultiAZ: !Ref 'MultiAZ'
      DBSubnetGroupName: !Ref 'RdsSubnetGroup'
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretDB, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretDB, ':SecretString:password}}' ]]
      BackupRetentionPeriod: 0
      DBInstanceIdentifier: !Ref 'DBName' 
      VPCSecurityGroups: 
        - !Ref 'RdsSecurityGroup'
      Tags:
        - Key: Name
          Value: 
            !Sub 
              - 'rds-mysql-${Project}-${EnvironmentName}-${DBName}'
              - { EnvironmentName: !FindInMap [ Names, !Ref Environment, short ] }
        - Key: vy:Environment
          Value: !Ref Environment
        - Key: vy:Owner
          Value: !Ref Owner
        - Key: vy:Project
          Value: !Ref Project
        - Key: vy:Company
          Value: !Ref Company
    DeletionPolicy: Snapshot

  RdsDNSRecordSet:
    Type: 'AWS::Route53::RecordSet'
    DependsOn: RDSMySql
    Properties:
      Comment: Record to call RDS Mysql using our domain name
      HostedZoneId: 
        Fn::ImportValue: 
          !Sub '${BaseDomainNameStackName}:PrivateHostedZoneId'
      Name: !Sub 
        - '${DBName}.${HostedZoneName}.'
        - HostedZoneName:
             Fn::ImportValue:
                !Sub '${BaseDomainNameStackName}:HostedZoneName'
      Type: CNAME 
      TTL: '300'
      ResourceRecords:
      - !GetAtt RDSMySql.Endpoint.Address

Outputs:
  MySqlName:
    Description: The Name of the Cluster Redis
    Value: !Sub '${DBName}'
    Export:
      Name: !Join [ ":", [ !Ref 'AWS::StackName', MySqlName ] ]

  EndPointUrl:
    Description: RDS EndPoint  
    Value: !Join ['',['http://', !GetAtt RDSMySql.Endpoint.Address]]
    Export:
      Name: !Join [ ":", [ !Ref 'AWS::StackName', EndPointUrl ] ]

  MySqlHostedZoneUrl:
    Description: The URL of MySql
    Value: !Join
      - ''
      - - 'http://'
        - !Sub
          - '${DBName}.${HostedZoneName}'
          - HostedZoneName:
              Fn::ImportValue: !Sub '${BaseDomainNameStackName}:HostedZoneName'
    Export:
      Name: !Join [ ":", [ !Ref 'AWS::StackName', MySqlHostedZoneUrl ] ]